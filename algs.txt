1、欧里几得算法：计算两个非负整数p 和q的最大公约数：若q 为0，则最大公约数为p
，否则，(p%q=r)将p除以q得到余数r，p 和q的最大公约数变为q 和r的最大公约数。
	互质，没有公约数
2、二分法查找
  针对有序数据 first last mid=(first+last )/2  
3、数组处理：
	找出最大值  遍历法
	计算出平均值，先求和 
	复制数组，b[i]=a[i]
	颠倒数组，借助中间变量
4、典型的静态方法 
	计算一个整数的绝对值 x<0?-x:x;     
	素数的判断：能被自身和1以外的数整除的数（i=0 ;i*i <n;i++） n%i==0为素数
	牛顿迭代法？：用现成的
	调和级数？1+1/2+1/3+...+1/N

模块化编程：将精力集中在算法上

5、类型转换
	parseTnt(String s) 将s转换为整数  //对于特别大的需要手动实现
	toString(int i)
	parseDouble(String s) 
	toString(double x)
6、将一个正整数N用二进制表示并转化为一个String
	Integer.toBinaryString(N)专门用于完成该任务
	对2取余数，然后拼接。String s="";for (int n=N;n>0;n/=2)s=(n%2)+s;
7、斐波那契数列优化  直接使用数组
8、删除重复元素、等值键
9、矩阵处理            相乘线代又忘了？C++的化用eigen库，Java的化也找矩阵相关的库
		 转置	
10、统计学编程  中位数、众数等