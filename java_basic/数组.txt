
int [] a;
int a[];
对数组进行初始化：
为数组分配内存空间并给与初始值
动态初始化：只指定长度，由系统给出初始化值
 	数据类型[] 数组名=new 数据类型[数组长度]
	 int [] arr=new int[3];
	System,out.println(arr);//打印地址值
	数组arr 存地址，指向堆内存
静态初始化：给出初始化值，由系统决定长度
	数组类型[] 数组名=new 数据类型[]{ 元素1，元素2，元素3，。。。};
	有简化版的格式：
	数组类型[] 数组名={元素1，元素2,元素3.。。};
Java中的内存分配
栈存储局部变量：在方法中定义的或方法上上声明的白能量
堆存储new出来的东西
方法区：（面向对象相关）
本地方法区：（和系统相关）
寄存器（给CPU使用）	

堆内存的特点：
1、每一个new 出来的东西都有地址
2、每个变量都有默认值
	byte,short,int long 0
	float double 0.0
	char '\u0000'
	boolean false
	引用类型 null
3、使用完毕就编程垃圾，并没有立即回收，会在垃圾回收器空闲时回收

数据操作的两个常见小问题：
      ArrayIndexOutOfBoundsException:数组索引越界异常，访问量不存在的索引
      BullPointerException:空指针异常，数组已经不再指向对内存了。

常见Exception 结尾的问题总结